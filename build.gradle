plugins {
    id 'groovy'
}

apply plugin: 'maven'
apply plugin: 'maven-publish'

group 'org.codehaus.groovy.modules.http-builder'
version '1.0-M1'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo1.maven.org/maven2/" }
}

dependencies {
    compile "org.apache.httpcomponents:httpclient:4.2.6"
    compile 'net.sf.json-lib:json-lib:2.4:jdk15'
    compile "org.codehaus.groovy:groovy-json:${groovyVersion}"
    compile "org.codehaus.groovy:groovy-xml:${groovyVersion}"
    compile "org.codehaus.groovy:groovy:${groovyVersion}"
    compile "net.sourceforge.nekohtml:nekohtml:1.9.16"
    compile "xml-resolver:xml-resolver:1.2"
    compile "oauth.signpost:signpost-commonshttp4:1.2.1.1"
    compile "oauth.signpost:signpost-core:1.2.1.1"
    compile "com.google.appengine:appengine-api-1.0-sdk:1.3.8"
    compile "xerces:xercesImpl:[2.6.2,)"
    testCompile "log4j:log4j:1.2.16"
    testCompile "commons-io:commons-io:1.4"
    testCompile "junit:junit:4.5"
    compile "com.anasoft.os:m2st-doxia-macros:${m2stVersion}"
    compile "org.apache.maven.doxia:doxia-sink-api:1.1.3"
    compile "org.apache.maven.doxia:doxia-core:1.1.3"
}


javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath

    options
            {
                setMemberLevel JavadocMemberLevel.PUBLIC
                setAuthor true

                links "https://docs.oracle.com/javase/8/docs/api/"
            }
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task packageJavadoc(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

tasks.withType(Javadoc) {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}


publishing {
    repositories {
        maven {
            credentials {
                username project.findProperty("nexusUsername") ?: System.getenv("NEXUS_USERNAME")
                password project.findProperty("nexusPassword") ?: System.getenv("NEXUS_PASSWORD")
            }
            url project.findProperty("nexusUrl") ?: System.getenv("NEXUS_URL")
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact packageJavadoc
        }
    }
}